// Num → Expr → GraphicsElement
letrec fun renderData' indentx {
   Constr(c,es) → match c === "Cons" as {
      True → 
         match head es as {
            Constr(c', es') →
               stackRight 0 [
                  match c' === "Pair" as {
                     True → match es' as [k, v] →
                        match k as {
                           ConstNum(n) → Text(0, 0, numToStr n);
                           ConstStr(str) → Text(0, 0, str)
                        };
                     False → error "Data format error: expected Pair expression."
                  },
                  Text(0, 0, ": "),
                  match k as {
                     Constr(c'', es'') → match or (c'' === "Cons") (c'' === "Nil") as {
                        True → Text(0, 0, "TODO");
                        False → Text(0, 0, "TODO")
                     };
                     ConstNum(n) → Text(0, 0, numToStr n);
                     ConstStr(str) → Text(0, 0, str)
                  }
               ]
         };
      False → Text(0, 0, "TODO")
   }
};
// Expr → GraphicsElement
let renderData = renderData' 0
