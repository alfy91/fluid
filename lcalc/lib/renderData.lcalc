// Num → Expr → GraphicsElement
letrec fun renderData' indentx {
   Cons(Pair(k, v), vs) → 
      stackRight 0 [
         typematch k as {
            Num → Text(0, 0, numToStr k);
            Str → Text(0, 0, k)
         },
         Text(0, 0, ": "),
         match v as {
            Constr(c'', es'') → match or (c'' === "Cons") (c'' === "Nil") as {
               True → renderData' indentx v;
               False → error "Data format error: expected List, Num or Str expression."
            };
            ConstNum(n) → Text(0, 0, numToStr n);
            ConstStr(str) → Text(0, 0, str)
         }
      ];
   Nil → Text(0, 0, "TODO")
};
// Expr → GraphicsElement
let renderData = renderData' 0
