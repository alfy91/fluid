// Visualises source code (expression), not intermediate values; slicing in the "middle" of a 
// computation is something we want to support but for now it's a complication we don't need.
// Data must have recursive format:
//    Data = List (Num | Str, Data)
// Expr → GraphicsElement
letrec fun renderData g →
   let x = stackDown 0 [
      stackRight 0 [Text(0, 0, "quick"), Text(0, 0, "lazy"),  Text(0, 0, "fox")],
      stackRight 0 [Text(0, 0, "quick"), Text(0, 0, "lazy"),  Text(0, 0, "fox")]
   ];
   let y = trace (height x)
   in
   stackDown 0 [
      Text(0, 0, "ibberish"), // non-whitespace line, with no descent - yuk
      stackRight 0 [Text(0, 0, "hello"), Text(0, 0, "cruel"),  Text(0, 0, "world")],
      x,
      stackRight 0 [Text(0, 0, "hello"), Text(0, 0, "cruel"),  Text(0, 0, "world")]
   ]
