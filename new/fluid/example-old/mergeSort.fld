let
   split {
      [] → ([], []);
      [x, ...xs] →
         let (ys, zs) = split xs;
         ([x, ...zs], ys)
   };

   merge xs ys →
      match (xs, ys) as {
         ([], _) → ys;
         ([x, ...xs'], []) → xs;
         ([x, ...xs'], [y, ...ys']) →
            if x < y
            then [x, ...merge xs' ys];
            else [y, ...merge xs ys']
      };

   mergesort xs →
      match xs as {
         [] → xs;
         [x] → xs;
         [x, y, ..._] →
            match split xs as
               (ys, zs) → merge (mergesort ys) (mergesort zs)
      };
mergesort [1, 2, 3]
