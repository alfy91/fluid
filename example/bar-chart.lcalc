let
   data = Cons((2001, 15), Cons((2002, 8), Cons((2005, 22), Cons((2007, 9), Nil))))
in
let rect_get_x = fun Rect(x, y, w, h) → x in
let rect_put_x = fun x → fun Rect(_, y, w, h) → Rect(x, y, w, h) in
let rect_get_w = fun Rect(x, y, w, h) → w in
letrec 
   fun map f → fun {
      Nil → Nil;
      Cons(x, xs) → Cons(f x, map f xs)
   }
in
let
   rectAsPoly = fun Rect(x, y, w, h) →
      Cons(Point(x, y), Cons(Point(x + w, y), Cons(Point(x + w, y + h), Cons(Point(x, y + h), Nil))))
in
let
   // discard x coordinates other than the first
   stackRight = fun sep → fun get_x → fun put_x → fun get_w → fun rects →
      letrec 
         fun stackRight' {
            Nil → Nil;
            Cons(rect, Nil) → Cons(rect, Nil);
            Cons(rect, Cons(rect2, rects)) → 
               Cons(rect, stackRight' Cons(put_x ((get_x rect) + (get_w rect) + sep) rect2, rects))
         } 
      in 
      stackRight' rects
in
   // list of polygons, where each "polygon" is a list of points
   map rectAsPoly (stackRight 1 rect_get_x rect_put_x rect_get_w (map (fun (year, age) → Rect(0, 0, 5, age)) data))
