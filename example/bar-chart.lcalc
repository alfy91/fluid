let 
   data = Cons((2001, 15), Cons((2002, 8), Cons((2005, 22), Cons((2007, 9), Nil))))
in 
letrec 
   fun map f → fun {
      Nil → Nil;
      Cons(x, xs) → Cons(f x, map f xs)
   }

   fun stackRight' x → fun
      Cons(Rect(_, y, w, h), rects) → Cons(Rect(x, y, w, h), stackRight' (x + w) rects)
in
let
   // discard x coordinates other than the first
   stackRight = fun {
      Nil → Nil;
      Cons(Rect(x, y, w, h), rects) → stackRight' x rects
   }
in
let
   polyRect = fun Rect(x, y, w, h) → 
      Cons(Point(x, y), Cons(Point(x + w, y), Cons(Point(x + w, y + h), Cons(Point(x, y + h), Nil))))
in
   // list of polygons, where each "polygon" is a list of points
   map polyRect (stackRight (map (fun (year, age) → Rect(0, 0, age, 5)) data))
