let
   data = Cons((2001, 15), Cons((2002, 8), Cons((2005, 22), Cons((2007, 9), Nil))))
in
let width = 6 in
let sep = width + 1 in
let rects = map (fun (year, age) → Rect(width, age)) data in
let axis = fun margin n width → // returns List<List<Point>>
   let tick = Cons(Point(0, 0), Cons(Point(0, -2), Nil)) in
   let ticks = fun n →
      spaceRight width
         (fun x' → map (point_put_x x'))
         (repeat n tick)
   in
   let line = Cons(Point(0, 0), Cons(Point(n * width, 0), Nil)) in
   map (map (translate (0, 0 - margin))) Cons(line, ticks n)
in
letrec 
   fun renderRects {
      Nil → Nil;
      Cons(r, rs) → 
         let ps = rectPath r in
         Cons(RectFill(ps), Cons(PathStroke(ps), Cons(Translate(Point(sep, 0)), renderRects(rs))))
   }
in
   // required to be List<GraphicsElement>
   concat
      (map (fun ps → PathStroke(ps)) (axis 1 5 7))
      (concat
         (map (fun ps → PathStroke(map transpose ps)) (axis 1 (length rects) width))
         (renderRects rects))
