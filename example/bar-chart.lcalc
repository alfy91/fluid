let 
   data = Cons((2001, 15), Cons((2002, 8), Cons((2005, 22), Cons((2007, 9), Nil))))
in 
letrec 
   fun map f → fun {
      Nil → Nil;
      Cons(x, xs) → Cons(f x, map f xs)
   }

   // discard x coordinates other than the first
   fun stackRight {
      Nil → Nil;
      Cons(rect, Nil) → Cons(rect, Nil);
      Cons(rect, Cons(Rect(_, y2, w2, h2), rects)) → 
         match rect as Rect(x1, y1, w1, h1) →
            Cons(Rect(x1, y1, w1, h1), stackRight Cons(Rect(x1 + w1, y2, w2, h2), rects))
   }
in
let
   polyRect = fun Rect(x, y, w, h) →
      Cons(Point(x, y), Cons(Point(x + w, y), Cons(Point(x + w, y + h), Cons(Point(x, y + h), Nil))))
in
   // list of polygons, where each "polygon" is a list of points
   map polyRect (stackRight (map (fun (year, age) → Rect(0, 0, 5, age)) data))
