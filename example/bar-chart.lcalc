let
   data = Cons((2001, 15), Cons((2002, 8), Cons((2005, 22), Cons((2007, 9), Nil))))
in
// Field accessors/updaters
let tail = fun Cons(x, xs) → xs in
let point_get_x = fun Point(x, y) → x in
let point_put_x = fun x Point(_, y) → Point(x, y) in
let rect_get_w = fun Rect(w, h) → w in
let incr = fun x get put shape → put (get shape + x) shape in 
let transpose = fun Point(x, y) → Point(y, x) in 
let translate = fun (dx, dy) Point(x, y) → Point(x + dx, y + dy) in 
let
   // discard x coordinates other than the first
   stackRight = fun sep get_x put_x get_w →
      letrec 
         fun stackRight' {
            Nil → Nil;
            Cons(shape, Nil) → Cons(shape, Nil);
            Cons(shape, Cons(shape2, shapes)) → 
               Cons(shape, stackRight' Cons(put_x ((get_x shape) + (get_w shape) + sep) shape2, shapes))
         } 
      in 
      stackRight'
in
// these two operate on abstract shapes (that support an x property), preserving their type
let
   // drop all x coordinates
   spaceRight = fun sep put_x shapes →
      zipW (fun (x, shape) → put_x x shape) (iterate (length shapes) (fun x → x + sep) 0) shapes
in
let width = 6 in
let sep = width + 1 in
let rects = map (fun (year, age) → Rect(width, age)) data in
let axis = fun margin n width → // returns List<List<Point>>
   let tick = Cons(Point(0, 0), Cons(Point(0, -2), Nil)) in
   let ticks = fun n →
      spaceRight width
         (fun x' → map (point_put_x x'))
         (repeat n tick)
   in
   let line = Cons(Point(0, 0), Cons(Point(n * width, 0), Nil)) in
   map (map (translate (0, 0 - margin))) Cons(line, ticks n)
in
let rectPath = fun Rect(w, h) →
   Cons(Point(0, 0),
   Cons(Point(w, 0),
   Cons(Point(w, h),
   Cons(Point(0, h), Nil))))
in
letrec 
   fun renderRects {
      Nil → Nil;
      Cons(r, rs) → 
         let ps = rectPath r in
         Cons(RectFill(ps), Cons(PathStroke(ps), Cons(Translate(Point(sep, 0)), renderRects(rs))))
   }
in
   // required to be List<GraphicsElement>
   concat
      (map (fun ps → PathStroke(ps)) (axis 1 5 7))
      (concat
         (map (fun ps → PathStroke(map transpose ps)) (axis 1 (length rects) width))
         (renderRects rects))
