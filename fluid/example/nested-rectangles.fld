letrec fun lookupStr k [(k', v), ...kvs] → 
   match k === k' as {
      True → v;
      False → lookupStr k kvs
   };
letrec fun lookupNum k [(k', v), ...kvs] → 
   match k == k' as {
      True → v;
      False → lookupNum k kvs
   };
let w = 1;
let colours = [
   "RosyBrown",
   "HotPink",
   "PaleGreen",
   "Aquamarine",
   "Plum",
   "Lime",
   "Navy"
];
let data2015 = lookupNum 2015 data;
let makeBar = fun ((_, n), col) → 
   Rect(0, 0, w, n, col);
let subChart = fun countryData →
   let rects = zipW makeBar countryData colours in
   Graphic(0, 0, length rects * w, max (map height rects), spaceRight w rects);
let bar1 = subChart (lookupStr "China" data2015);
let bar2 = subChart (lookupStr "Germany" data2015)
in
Graphic(0, 0, width bar1, height bar1, [bar1])
