let isCountry name x = name == x.country;
    isYear year x = year == x.year;

let energy year countries =
  let rens = filter (isYear year) renewables;
      nonRens = filter (isYear year) nonRenewables;
  let energyPerCountry country =
    let rens' = filter (isCountry country) rens;
        rensOut = sum (map (fun x -> x.output) rens');
        rensCap = sum (map (fun x -> x.capacity) rens');
        x = head (filter (isCountry country) nonRens);
        nonRensCap = x.nuclearCap + x.petrolCap + x.gasCap + x.coalCap
    in {
      c: country,
      x: nonRensCap / (rensCap + nonRensCap),
      y: (rensOut + x.nuclearOut) / (rensCap + x.nuclearCap)
    }
  in map energyPerCountry countries;

let countries = [
   "BRA", "CHN", "DEU", "FRA", "EGY", "IND", "JPN", "MEX", "NGA", "USA"
]
in ScatterPlot {
  caption: "Clean energy efficiency vs. proportion of renewable energy capacity",
  data: energy 2018 countries,
  xlabel: "Renewables/TotalEnergyCap",
  ylabel: "Clean Capacity Factor"
}
