let sumNonRenewables x = x.nuclearCap + x.petrolCap + x.gasCap + x.coalCap;
let isCountry name x = name == x.country;
let isYear year x = year == x.year;

let energy year c_names =
  let rens2018 = filter (isYear year) renewables;
  let nonrens2018 = filter (isYear year) non_renewables;
  let energy_per_country c_name =
    let filteredRen = filter (isCountry c_name) rens2018;
    let non_ren_x = head (filter (isCountry c_name) nonrens2018);
    let rensOut = sum (map (fun x -> x.output) filteredRen);
    let rensCap = sum (map (fun x -> x.capacity) filteredRen);
    let nonRensCap = sumNonRenewables non_ren_x
    in {
      name: c_name,
      totalCap: rensCap + nonRensCap,
      non_renewables: nonRensCap,
      renCapFactor: (rensOut + non_ren_x.nuclearOut) / (rensCap + non_ren_x.nuclearCap)
    }
  in
  map energy_per_country c_names
in ScatterPlot {
  caption: "Clean energy efficiency against proportion of renewable energy cap",
  data: [{ x: ctry.non_renewables / ctry.totalCap, y: ctry.renCapFactor, c: ctry.name }
    | ctry <- energy 2018 ["BRA", "CHN", "DEU", "FRA", "EGY", "IND", "JPN", "MEX", "NGA", "USA"]
  ],
  xlabel: "Renewables/TotalEnergyCap",
  ylabel: "Clean Capacity Factor"
}
