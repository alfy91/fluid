let sumNonRenewables x = x.nuclearCap + x.petrolCap + x.gasCap + x.coalCap;
let country_check name x = name == x.country;
let year_check year x = year == x.year;

let energy year c_names =
  let rens2018 = filter (year_check year) renewables;
  let nonrens2018 = filter (year_check year) non_renewables;
  let energy_per_country c_name = 
    let filteredRen = filter (country_check c_name) rens2018;
    let non_ren_x = head (filter (country_check c_name) nonrens2018);
    let rensOut = sum (map (fun x = x.output) filteredRen);
    let rensCap = sum (map (fun x = x.capacity) filteredRen);
    let nonRensCap = sumNonRenewables non_ren_x
    in {
            name: c_name,
            totalCap: rensCap + nonRensCap,
            non_renewables: nonRensCap,
            renCapFactor: (rensOut + non_ren_x.nuclearGen) / (rensCap + non_ren_x.nuclearCap)
        }
  in
    map energy_per_country c_names
in ScatterPlot {
    caption: "Clean energy efficiency against proportion of renewable energy cap",
    data: [{
                x: country.non_renewables / country.totalCap,
                y: country.renCapFactor,
                c: country.name
            }| country <- energy 2018 ["USA"]],
    xlabel: "Renewables/TotalEnergyCap",
    ylabel: "Clean Capacity Factor"
}
