// Str → List (Num, List (Str, Num))
let countryData = fun country →
   flip map data (fun (year, yearData) → (year, lookup country yearData));
// Str → List (Num, List (Str, Num)) → List (Num, Num)
let timeSeries = fun energyType → map (second (lookup energyType));
let chinaPlot = fun energyType → timeSeries energyType (countryData "China");
let chinaData = chinaPlot "Bio";
let start = min (map fst chinaData)
in
Polyline(None, flip map chinaData (fun (year, n) → (year - start, n)))
