
let bound (lower, upper) x =
    if x > upper then upper else
    if x < lower then lower else x;

let sum = foldr (+) 0;

let quot' a b c = if a - b > 0 then quot' (a - b) b (c + 1) else c;
    quot a b    = quot' a b 0;

let conv_extend image filter =
    let ((ma, na), (mz, nz)) = bounds image;
        ((ia, ja), (iz, jz)) = bounds filter;
        half_width           = quot (jz - ja) 2;
        half_height          = quot (iz - ia) 2;
        spatial_extent       = (iz - ia + 1) * (jz - ja + 1)
    in  [| sum [ image!(image_y, image_x) * filter!(filter_y, filter_x)
                             |  (y, x) <- range (bounds filter),
                                let filter_y = iz - y,
                                let filter_x = jz - x,
                                let image_y  = bound (ma, mz) (c + y - half_height),
                                let image_x  = bound (na, nz) (d + x - half_width) ]
           / spatial_extent)
         | (c, d) in bounds image |];
